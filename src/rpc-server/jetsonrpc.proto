syntax = "proto3";

package jetsonrpc;

service JetsonRPC {
  rpc SendMotorCmd (stream MotorCmd) returns (Void);
  
  rpc StreamIMU (Rate) returns (stream IMUData);
  rpc StreamImage (Rate) returns (stream Image);
  rpc StreamMotorCurrent (Rate) returns (stream MotorCurrent);
  rpc StreamArmStatus (Rate) returns (stream ArmStatus);

  rpc StreamAutonomyTwist (Void) returns (stream TwistMessage);

  rpc EmergencyStop (Void) returns (Void);
}


message Void {}

message MotorCmd {
  // 8 motor commands packed
  fixed32 values = 1;
}

message Twist {
  repeated float values = 1;
}

message MotorCurrent {
  // 8 bytes packed in values
  fixed64 values = 1;
}

message ArmStatus {
  float angle = 1;
  float translation = 2;
}

message IMUData {
  repeated float values = 1;
}

message Rate {
  int32 rate = 1;
}

message Image {
  bytes data = 1;
}

message TwistMessage {
  // Corresponds to the ROS geometry_msgs/Twist message, plus a timestamp. 
  // See https://docs.ros.org/en/noetic/api/geometry_msgs/html/msg/Twist.html
  float linX = 1;
  float linY = 2;
  float linZ = 3;
  float angX = 4;
  float angY = 5;
  float angZ = 6;
  int32 timeSinceStart = 7;
}
