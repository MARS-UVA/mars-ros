obstacle_range: 3.0
raytrace_range: 3.0

# footprint: [[0, 0]]
# circular robot :)
robot_radius: 0.25
inflation_radius: 0.5 

observation_sources: laser_scan_sensor, odom_sensor

#point_cloud_sensor: {
  #sensor_frame: d435_depth_optical_frame, 
  #data_type: PointCloud2, 
  #topic: /d435/depth/color/points, 
  ## data_type: Image, 
  ## topic: /d435/depth/image_rect_raw, 
  #marking: true, 
  #clearing: true
#}

laser_scan_sensor: {
  sensor_fram: lidar,
  data_type: LaserScan,
  topic: scan,
  marking: true,
  clearing: true
}

odom_sensor: {
  sensor_fram: tracking_cam,
  data_type: Odometry,
  topic: /camera/odom/sample,
  marking: true,
  clearing: true
}

# /camera/odom/sample of type nav_msgs/Odometry
# tf is called camera_odom_frame


# new
global_frame: camera_odom_frame
robot_base_frame: robot_base
update_frequency: 20.0
publish_frequency: 20.0
publish_voxel_map: true
static_map: false
rolling_window: true
width: 6.0
height: 6.0
resolution: 0.025

map_type: voxel
origin_z: 0.0
z_resolution: 1
z_voxels: 32
unknown_threshold: 10
mark_threshold: 0

transform_tolerance: 0.3
obstacle_range: 2.5
max_obstacle_height: 1.0
min_obstacle_height: 0.10
raytrace_range: 3.0
footprint: [[-0.325, -0.325], [-0.325, 0.325], [0.325, 0.325], [0.46, 0.0], [0.325,-0.325]]
footprint_padding: 0.01
inflation_radius: 0.55
cost_scaling_factor: 10.0
lethal_cost_threshold: 100

observation_sources: laser_scan_sensor, odom_sensor

#point_cloud_sensor: {
  #sensor_frame: d435_depth_optical_frame, 
  #data_type: PointCloud2, 
  #topic: /d435/depth/color/points, 
  ## data_type: Image, 
  ## topic: /d435/depth/image_rect_raw, 
  #marking: true, 
  #clearing: true
#}

laser_scan_sensor: {
  sensor_fram: lidar,
  data_type: LaserScan,
  topic: scan,
  marking: true,
  clearing: true
}

odom_sensor: {
  sensor_fram: tracking_cam,
  data_type: Odometry,
  topic: /camera/odom/sample,
  marking: true,
  clearing: true
}