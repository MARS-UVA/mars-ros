<launch>
    <env name="ROSCONSOLE_FORMAT" value="[${node}] [${severity}] [WallTime: ${time}]: ${message}" />

    <arg name="autonomy" default="false" />
    <arg name="hero" default="false" />
    <arg name="hero_dummy" default="false" />
    <arg name="cameras" default="false" />

    <group if="$(eval cameras)">
        <!-- <include file="$(find navigation)/launch/d435_camera.launch"></include> -->
        <!-- use a bash script to delay t265 launch -->
        <!-- <node pkg="navigation" name="t265_script" type="t265_camera.sh" output="screen"></node> -->
        <!-- <include file="$(find navigation)/launch/t265_camera.launch"></include> -->

        <include file="$(find navigation)/launch/cameras.launch"></include>
    </group>
    
    <!-- rpc server -->
    <node name="rpc_server" pkg="rpc-server" type="grpc-server" output="screen" />

    <!-- hero communication node -->
    <group if="$(eval hero)">
        <!-- this bash script just contains 'sudo chmod 666 /dev/ttyUSB0' -->
        <node name="hero_permission" pkg="hero_board" type="permission.sh" output="screen" />
        <node name="hero_comm" pkg="hero_board" type="send_recv.py" output="screen" />
    </group>
    <group if="$(eval hero_dummy)">
        <node name="hero_comm" pkg="hero_board" type="send_recv_dummy.py" output="screen" />
    </group>

    <!-- static transforms -->
    <node pkg="navigation" type="static_tf" name="static_tf" output="screen"></node>

    <group if="$(eval autonomy)">
        <!-- depth to point cloud -->
        <include file="$(find processing)/launch/pointcloud.launch">
            <arg name="rgb_pc" value="false" />
        </include>

        <!-- apriltag detection -->
        <include file="$(find apriltag_ros)/launch/continuous_detection.launch">
            <arg name="camera_name" value="/d435/color" />
            <arg name="camera_frame" value="d435_link" />
            <arg name="image_topic" value="image_raw" />
        </include>

        <!-- <node pkg="navigation" type="fake_odom" name="odom_node" output="screen"> -->
            <!-- <param name="odom_param" value="param_value" /> -->
        <!-- </node> -->

        <!-- This is where  -->
    </group>
</launch>