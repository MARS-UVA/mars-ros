<!-- https://arxiv.org/pdf/1411.1086.pdf -->
<!-- error: can't transform 'depth_laser_scan' to 'camera_depth_optical_frame' -->
<launch>
    <arg name="model" default="waffle" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="urdf_file" default="$(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro"/>
    <!-- <arg name="world_name" default="$(find navigation)/worlds/crater-and-boulders.world"/> -->
    <arg name="world_name" default="$(find turtlebot3_gazebo)/worlds/turtlebot3_world.world"/>
    <!--<arg name="world_name" default="$(find navigation)/worlds/more-craters.world"/>-->

    <!-- open simulated world -->
    <include file="$(find navigation)/launch/turtlebot3_world.launch">
      <arg name="model" value="$(arg model)" />
      <arg name="urdf_file" value="$(arg urdf_file)" />
      <arg name="world_name" value="$(arg world_name)" />
    </include>

    <!-- start node to publish Turtlebot3 (simulated robot) state -->
    <!-- replace standard turtlebot bringup node with a custom one so we can use a custom urdf file -->
    <include file="$(find navigation)/launch/turtlebot3_remote.launch">
        <arg name="model" value="$(arg model)" />
        <arg name="urdf_file" value="$(arg urdf_file)" />
    </include>

    <node pkg="tf" type="static_transform_publisher" name="map_static_broadcaster" args="1 0 0 0 0 0 1 map camera_rgb_optical_frame 100" />
    <node pkg="tf" type="static_transform_publisher" name="ira_static_broadcaster" args="1 0 0 0 0 0 1 camera_rgb_optical_frame depth_laser_scan 100" />
    
    <node pkg="ira_laser_tools" name="laserscan_virtualizer" type="laserscan_virtualizer" output="screen">
      <param name="cloud_topic" value="/camera/depth/points"/>       <!-- INPUT POINT CLOUD -->
      <param name="base_frame" value="/camera_rgb_optical_frame"/>     <!-- REFERENCE FRAME WHICH LASER(s) ARE RELATED-->
      <param name="output_laser_topic" value ="/depth_laser_scan_topic" />  <!-- VIRTUAL LASER OUTPUT TOPIC, LEAVE VALUE EMPTY TO PUBLISH ON THE VIRTUAL LASER NAMES (param: output_laser_scan) -->
      <param name="virtual_laser_scan" value ="depth_laser_scan" /> <!-- LIST OF THE VIRTUAL LASER SCANS. YOU MUST PROVIDE THE STATIC TRANSFORMS TO TF, SEE ABOVE -->
	  </node>
</launch>